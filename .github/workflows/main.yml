# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on: [push, pull_request, workflow_dispatch]

# A workflow  run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    environment: Base
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     python-version: [3.10, 3.11, 3.12]
    # Steps represent a sequence of tasks that will be executed as part of the job

    steps:
    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.11.10
      - name: Set up conda test
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          miniforge-variant: Miniforge
          channels: conda-forge
          #auto-activate-base: false
          activate-environment: pandora
          environment-file: environment.yml
          python-version: 3.11.10
          use-mamba: true
          # python-version: ${{ matrix.python-version }}
          # auto-update-conda: false
          # miniforge-version: latest
      - name: Set up directories
        run: | 
          python test/install_git_test.py 

      - name: Install package
        shell: bash -l {0}
        run: |
          pip install joblib
          python -m pip install --upgrade pip
          pip install -e .[test]

      - name: Test with pytest
        shell: bash -l {0}
        env:
          KEY_MODELLER: ${{ secrets.MODELLER_KEY }}
        run: |
          echo $KEY_MODELLER
          conda install -c salilab modeller
          conda install -c bioconda muscle=5.1
          conda install -c bioconda blast=2.10
          alias blastp='$CONDA/bin/blastp'
          alias muscle='$CONDA/bin/muscle'
          pytest test/ --cov=PANDORA --cov-config=.coveragerc --cov-report xml:coverage.xml

      - name: Coveralls
        shell: bash -l {0}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coverage.xml
        run: |
          coveralls --service=github